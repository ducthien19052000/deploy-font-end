[{"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\index.js":"1","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\editCart.jsx":"2","E:\\Code\\DATN\\font-end\\src\\components\\Main\\Header\\index.js":"3","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\FoodDetail\\index.js":"4","E:\\Code\\DATN\\font-end\\src\\redux\\saga\\foodSaga.js":"5","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\ProductCategory\\index.js":"6","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\index.js":"7","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\CategoryHome.jsx":"8","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Food\\index.js":"9","E:\\Code\\DATN\\font-end\\src\\redux\\store\\configStore.js":"10","E:\\Code\\DATN\\font-end\\src\\index.js":"11","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\cartAction.js":"12","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\cartReducer.js":"13","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\ProductItemHome.js":"14","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\toppinngAction.jsx":"15","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\toppingReducer.js":"16","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\ProductItem.jsx":"17","E:\\Code\\DATN\\font-end\\src\\App.js":"18","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\foodReducer.js":"19","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\invoiceReducer.js":"20","E:\\Code\\DATN\\font-end\\src\\redux\\saga\\categorySaga.js":"21","E:\\Code\\DATN\\font-end\\src\\redux\\saga\\userSaga.js":"22","E:\\Code\\DATN\\font-end\\src\\redux\\saga\\invoiceSaga.jsx":"23","E:\\Code\\DATN\\font-end\\src\\pages\\layout\\Main.js":"24","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\User\\OAuth2\\OAuth2RedirectHandler.js":"25","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\group-food.js":"26","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\ModalAdd\\index.js":"27","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\ModalEdit\\editFood.jsx":"28","E:\\Code\\DATN\\font-end\\src\\pages\\layout\\MainAdmin.js":"29","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\cartItem.jsx":"30","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\index.js":"31","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\index.js":"32","E:\\Code\\DATN\\font-end\\src\\routers\\index.js":"33","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\ProductSearch\\index.jsx":"34","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Search\\index.jsx":"35","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\FirstStep.js":"36","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\SecondStep.js":"37","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\FourStep.js":"38","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\index.js":"39","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Login\\index.jsx":"40","E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Footer\\index.js":"41","E:\\Code\\DATN\\font-end\\src\\components\\Loading\\index.jsx":"42","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\userReducer.js":"43","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\categoryAction.js":"44","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\userAction.js":"45","E:\\Code\\DATN\\font-end\\src\\routers\\PrivateRouter.jsx":"46","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\ProducCategory.jsx":"47","E:\\Code\\DATN\\font-end\\src\\components\\Main\\Footer\\index.js":"48","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Category\\index.jsx":"49","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\FoodDetail\\cartTopping.jsx":"50","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\index.jsx":"51","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceDetail.jsx":"52","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Profile\\index.jsx":"53","E:\\Code\\DATN\\font-end\\src\\constants\\index.js":"54","E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Slider\\index.js":"55","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceAll.jsx":"56","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceSucces.jsx":"57","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceActive.jsx":"58","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Profile\\ProfileInvoice.js":"59","E:\\Code\\DATN\\font-end\\src\\redux\\Action\\invoiceAction.js":"60","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\index.jsx":"61","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\CartCheckout.jsx":"62","E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Header\\index.js":"63","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\InvoiceShip.jsx":"64","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Dasboard\\index.jsx":"65","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Dasboard\\chartData.js":"66"},{"size":533,"mtime":1606498009921,"results":"67","hashOfConfig":"68"},{"size":4481,"mtime":1606726883217,"results":"69","hashOfConfig":"68"},{"size":4506,"mtime":1607180961110,"results":"70","hashOfConfig":"68"},{"size":13121,"mtime":1607063007468,"results":"71","hashOfConfig":"68"},{"size":3622,"mtime":1607008086227,"results":"72","hashOfConfig":"68"},{"size":9182,"mtime":1606723086868,"results":"73","hashOfConfig":"68"},{"size":8938,"mtime":1606920884434,"results":"74","hashOfConfig":"68"},{"size":2214,"mtime":1606918937452,"results":"75","hashOfConfig":"68"},{"size":5523,"mtime":1607074485000,"results":"76","hashOfConfig":"68"},{"size":498,"mtime":1607082827557,"results":"77","hashOfConfig":"68"},{"size":686,"mtime":1607247501333,"results":"78","hashOfConfig":"68"},{"size":1357,"mtime":1606668584498,"results":"79","hashOfConfig":"68"},{"size":2305,"mtime":1606668604886,"results":"80","hashOfConfig":"68"},{"size":1438,"mtime":1606919020416,"results":"81","hashOfConfig":"68"},{"size":1015,"mtime":1606538873472,"results":"82","hashOfConfig":"68"},{"size":1544,"mtime":1606644667637,"results":"83","hashOfConfig":"68"},{"size":1388,"mtime":1606542617376,"results":"84","hashOfConfig":"68"},{"size":168,"mtime":1606297678554,"results":"85","hashOfConfig":"68"},{"size":2194,"mtime":1606302520312,"results":"86","hashOfConfig":"68"},{"size":2471,"mtime":1607003725229,"results":"87","hashOfConfig":"68"},{"size":2904,"mtime":1606319395381,"results":"88","hashOfConfig":"68"},{"size":908,"mtime":1606268457008,"results":"89","hashOfConfig":"68"},{"size":2365,"mtime":1607062402087,"results":"90","hashOfConfig":"68"},{"size":565,"mtime":1606214002922,"results":"91","hashOfConfig":"68"},{"size":1240,"mtime":1606272062574,"results":"92","hashOfConfig":"68"},{"size":1916,"mtime":1606319013139,"results":"93","hashOfConfig":"68"},{"size":3696,"mtime":1606840377076,"results":"94","hashOfConfig":"68"},{"size":3895,"mtime":1606747776974,"results":"95","hashOfConfig":"68"},{"size":776,"mtime":1607247161313,"results":"96","hashOfConfig":"68"},{"size":3325,"mtime":1606992014534,"results":"97","hashOfConfig":"68"},{"size":2383,"mtime":1606748509431,"results":"98","hashOfConfig":"68"},{"size":5586,"mtime":1606723123015,"results":"99","hashOfConfig":"68"},{"size":3541,"mtime":1607229027439,"results":"100","hashOfConfig":"68"},{"size":6548,"mtime":1606722898572,"results":"101","hashOfConfig":"68"},{"size":4340,"mtime":1606919921860,"results":"102","hashOfConfig":"68"},{"size":6410,"mtime":1606750435998,"results":"103","hashOfConfig":"68"},{"size":8157,"mtime":1606753815473,"results":"104","hashOfConfig":"68"},{"size":6211,"mtime":1606991160655,"results":"105","hashOfConfig":"68"},{"size":2977,"mtime":1606293765601,"results":"106","hashOfConfig":"68"},{"size":2388,"mtime":1607087523198,"results":"107","hashOfConfig":"68"},{"size":305,"mtime":1607247112726,"results":"108","hashOfConfig":"68"},{"size":226,"mtime":1605704160597,"results":"109","hashOfConfig":"68"},{"size":577,"mtime":1605303689536,"results":"110","hashOfConfig":"68"},{"size":2669,"mtime":1605295431904,"results":"111","hashOfConfig":"68"},{"size":534,"mtime":1605303111049,"results":"112","hashOfConfig":"68"},{"size":837,"mtime":1607061968667,"results":"113","hashOfConfig":"68"},{"size":3148,"mtime":1606922536450,"results":"114","hashOfConfig":"68"},{"size":1333,"mtime":1604372279981,"results":"115","hashOfConfig":"68"},{"size":3073,"mtime":1607074686971,"results":"116","hashOfConfig":"68"},{"size":1112,"mtime":1606892221808,"results":"117","hashOfConfig":"68"},{"size":2853,"mtime":1607046975294,"results":"118","hashOfConfig":"68"},{"size":4696,"mtime":1607248557989,"results":"119","hashOfConfig":"68"},{"size":2245,"mtime":1606968912248,"results":"120","hashOfConfig":"68"},{"size":308,"mtime":1607229010379,"results":"121","hashOfConfig":"68"},{"size":1681,"mtime":1606354631561,"results":"122","hashOfConfig":"68"},{"size":5007,"mtime":1607074862811,"results":"123","hashOfConfig":"68"},{"size":4643,"mtime":1607074823584,"results":"124","hashOfConfig":"68"},{"size":5385,"mtime":1607074799791,"results":"125","hashOfConfig":"68"},{"size":4545,"mtime":1607062299104,"results":"126","hashOfConfig":"68"},{"size":3238,"mtime":1607003571597,"results":"127","hashOfConfig":"68"},{"size":2467,"mtime":1606991037064,"results":"128","hashOfConfig":"68"},{"size":2548,"mtime":1606991634847,"results":"129","hashOfConfig":"68"},{"size":1631,"mtime":1605183707831,"results":"130","hashOfConfig":"68"},{"size":4957,"mtime":1607074831245,"results":"131","hashOfConfig":"68"},{"size":2332,"mtime":1607247045592,"results":"132","hashOfConfig":"68"},{"size":2325,"mtime":1607246831211,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1q7aiok",{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"151"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"151"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"140"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\index.js",[],["286","287"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\editCart.jsx",["288","289","290","291"],"import { Col, Input, Modal, notification, Row } from \"antd\";\r\nimport CollapsePanel from \"antd/lib/collapse/CollapsePanel\";\r\nimport confirm from \"antd/lib/modal/confirm\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst EditCart = ({\r\n  item,\r\n  visible,\r\n  handleCancel,\r\n  onHandleRemoveCart,\r\n  onUpdatePrToCart,\r\n}) => {\r\n  const [quantity, setQuantity] = useState(item.quantity);\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setQuantity(value);\r\n    console.log(value);\r\n  };\r\n  const handleDeletePrCart = (product, topping) => {\r\n    onHandleRemoveCart(product, topping);\r\n    handleCancel();\r\n  };\r\n  const onUpdateToCart = (product, quantity, topping) => {\r\n    confirm({\r\n      title: \"Bạn muốn cập nhật giỏ hàng?\",\r\n      content: `Sản phẩm :${product.productName} x ${quantity}`,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        onUpdatePrToCart(product, quantity, topping);\r\n        setQuantity(0);\r\n        notification[\"success\"]({\r\n          message: \"\",\r\n          duration: 2,\r\n          description: \"Cập nhật giỏ hàng thành công\",\r\n        });\r\n        handleCancel();\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={item.product.productName}\r\n        visible={visible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div\r\n          className=\"itemDetailCartQuantity\"\r\n          style={{ marginTop: 0, paddingTop: 0 }}\r\n        >\r\n          <div>\r\n            <Row className=\"rowImageEditCart\">\r\n              <Col xs={24} md={16} style={{ height: \"100px\" }}>\r\n                <span>\r\n                  <img src={item.product.image} style={{ height: \"100%\" }} />\r\n                </span>\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                <div style={{ margin: \"10px 0\", textAlign: \"center\" }}>\r\n                  <span className=\"spanPriceDetailItem\">\r\n                    <Input\r\n                      className=\"inputShowQuantity\"\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"[0-9]*\"\r\n                      type=\"number\"\r\n                      min={0}\r\n                      max={99}\r\n                      value={quantity}\r\n                      onChange={onHandleChange}\r\n                    />\r\n                  </span>\r\n                </div>\r\n                <span className=\"spanShowQuantity\">\r\n                  Giá: {item.product.price} đ/{item.product.unit}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n           {item.topping.length!==0&&<>\r\n            <Row\r\n              type=\"flex\"\r\n              className=\"rowCartChangeTopping\"\r\n              style={{ marginBottom: \"20px\" }}\r\n            >\r\n              <Col xs={24} md={8}></Col>\r\n              <Col xs={24} md={8}>\r\n                Tên\r\n              </Col>\r\n              <Col xs={24} md={8}>\r\n                Giá\r\n              </Col>\r\n            </Row>\r\n            {item.topping.map((value,index)=>(\r\n                  <Row style={{margin:'10px 0'}} key={index}>\r\n                  <Col xs={24} md={8} >\r\n                  <img\r\n              width=\"50px\" height='50px'\r\n              src=\"https://tse4.mm.bing.net/th?id=OIP.Pd_SHEfWBTat_af-uSgppAHaJ4&pid=Api&P=0&w=300&h=300\"\r\n            />\r\n                  </Col>\r\n                  <Col xs={24} md={8}>\r\n                    {value.topping.name}\r\n                  </Col>\r\n                  <Col xs={24} md={8}>\r\n                    {value.topping.price}\r\n                  </Col>\r\n                </Row>\r\n            ))}</>}\r\n          \r\n            {quantity > 0 && (\r\n              <Row className=\"cart__button\">\r\n                <span\r\n                  className=\"btn__label\"\r\n                  onClick={() =>\r\n                    onUpdateToCart(item.product, quantity, item.topping)\r\n                  }\r\n                >\r\n                  Cập nhật\r\n                </span>\r\n              </Row>\r\n            )}\r\n            {quantity === \"0\" && (\r\n              <Row className=\"cart__button\">\r\n                <span\r\n                  className=\"btn__label\"\r\n                  onClick={() => handleDeletePrCart(item.product, item.topping)}\r\n                >\r\n                  Xóa\r\n                </span>\r\n              </Row>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCart;\r\n",["292","293"],"E:\\Code\\DATN\\font-end\\src\\components\\Main\\Header\\index.js",["294","295","296","297"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\FoodDetail\\index.js",["298","299","300","301","302","303","304"],"import { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  List,\r\n  notification,\r\n  Row,\r\n  Table\r\n} from \"antd\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport confirm from \"antd/lib/modal/confirm\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { addToCart } from \"../../../../redux/Action/cartAction\";\r\nimport {\r\n  addToping,\r\n  deleteAllCart,\r\n  removeToCart\r\n} from \"../../../../redux/Action/toppinngAction\";\r\nimport Cart from \"../Cart\";\r\nimport ProductItem from \"../Product/ProductItem\";\r\nimport CartTopping from \"./cartTopping\";\r\nimport \"./index.css\";\r\n\r\nconst FoodDetail = ({\r\n  cart,\r\n  AddToCart,\r\n  AddToTopping,\r\n  topping,\r\n  DeleteToTopping,\r\n  DeleteAllTopping,\r\n}) => {\r\n  const id = useParams().id;\r\n  const [foodDetail, setFoodDetail] = useState({});\r\n  const [visible, setVisible] = useState(false);\r\n  const [product, setProduct] = useState([]);\r\n  const [idCate, setIdCate] = useState();\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [showTopping, setShowTopping] = useState(false);\r\nconst [checked,setChecked] = useState(false)\r\n\r\nconsole.log('hakjhsdkja')\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const handleAddTopping = (toping) => {\r\n  \r\n    AddToTopping(toping);\r\n  };\r\n  useEffect(() => {\r\n    DeleteAllTopping([]);\r\n  }, [id]);\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n  const findProductCart = (cart, topping) => {\r\n    var index = -1;\r\n    if (cart.length > 0) {\r\n      for (var i = 0; i < cart.length; i++) {\r\n        if (cart[i].toping.id === topping.id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return index;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`https://website-fpoly-food.herokuapp.com/product/${id}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"*/*\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setFoodDetail(response.body);\r\n        console.log(response.body);\r\n        if (response.body.toppingList.length !== 0) {\r\n          setShowTopping(true);\r\n          setChecked(false)\r\n        }\r\n\r\n        setIdCate(response.body.categoryEntity.id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://website-fpoly-food.herokuapp.com/product/?productName=&status=&categoryId=1&size=4&page=0`,\r\n      {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"*/*\",\r\n        }),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setProduct(response.body.content);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [idCate]);\r\n\r\n  //showTotalCart\r\n  const showQuantity = (cart) => {\r\n    var quantity = 0;\r\n    if (cart.length > 0) {\r\n      for (var i = 0; i < cart.length; i++) {\r\n        quantity += cart[i].quantity;\r\n      }\r\n      return quantity;\r\n    }\r\n  };\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(value);\r\n    setQuantity(Number(value));\r\n    // console.log(\"changed\", value);\r\n  };\r\n  //addtopping\r\n  const onChange = (e, topping) => {\r\n    console.log(e.target.checked,topping)\r\n    if (e.target.checked) {\r\n      const price = foodDetail.price + topping.price;\r\n      handleAddTopping(topping);\r\n      setChecked(true)\r\n      setFoodDetail({ ...foodDetail, price });\r\n    }\r\n    if (e.target.checked === false) {\r\n      DeleteToTopping(topping);\r\n      setChecked(false)\r\n      const price = foodDetail.price - topping.price;\r\n\r\n      setFoodDetail({ ...foodDetail, price });\r\n    }\r\n  };\r\n  const onAddToCart = (product, quantity, topping) => {\r\n    if (quantity !== 0) {\r\n      confirm({\r\n        title: \"Bạn muốn thêm sản phẩm vào giỏ hàng?\",\r\n\r\n        content: `Sản phẩm :${product.productName} x ${quantity}`,\r\n        okText: \"Yes\",\r\n        okType: \"danger\",\r\n        cancelText: \"No\",\r\n        onOk() {\r\n          AddToCart(product, quantity, topping);\r\n          notification[\"success\"]({\r\n            message: \"\",\r\n            duration: 2,\r\n            description: \"Thêm sản phẩm thành công\",\r\n          });\r\n        },\r\n        onCancel() {},\r\n      });\r\n    } else {\r\n      notification[\"success\"]({\r\n        message: \"\",\r\n        duration: 2,\r\n        description: \"Vui lòng chọn số lượng\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkTopping = (record) =>{\r\n\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Image\",\r\n      dataIndex: \"\",\r\n      width: 120,\r\n      render: (text) => (\r\n        <img\r\n          width=\"80%\"\r\n          src=\"https://tse4.mm.bing.net/th?id=OIP.Pd_SHEfWBTat_af-uSgppAHaJ4&pid=Api&P=0&w=300&h=300\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên \",\r\n      dataIndex: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Giá\",\r\n      dataIndex: \"price\",\r\n      render: (text) => <span>{text} đ</span>,\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"\",\r\n      render: (record) => \r\n      \r\n        // <Input type='checkbox'/>\r\n        // <CartTopping checked={checked} onChange={onChange} record={record}/>\r\n       \r\n        <Checkbox onChange={(e) => onChange(e, record)} autoFocus={false} defaultChecked={false}></Checkbox>\r\n      ,\r\n    },\r\n  ];\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n  };\r\n \r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        className=\"row-food-detail-container\"\r\n        justify=\"center\"\r\n        style={{ marginTop: \"30px\" }}\r\n      >\r\n        <Badge count={showQuantity(cart)} id=\"myBtn\" overflowCount={10}>\r\n          <Button\r\n            shape=\"circle\"\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={showDrawer}\r\n          >\r\n            {\" \"}\r\n            <ShoppingCartOutlined\r\n              style={{ fontSize: \"30px\", color: \"#fff\", margin: 0 }}\r\n            />\r\n          </Button>\r\n        </Badge>\r\n        <Col span={21}>\r\n       \r\n\r\n          <Row>\r\n            <Col xs={24} md={8} className=\"col-img-food-detail\">\r\n              <div\r\n                className=\"imageDetailItem\"\r\n                style={{ backgroundImage: `url(${foodDetail.image})` }}\r\n              ></div>\r\n              <div className=\"itemDetailImgListWrapped\">\r\n                <image className=\"itemDetailImg\" src={foodDetail.image} />\r\n                <image className=\"itemDetailImg\" src={foodDetail.image} />\r\n                <image className=\"itemDetailImg\" src={foodDetail.image} />\r\n                <image className=\"itemDetailImg\" src={foodDetail.image} />\r\n              </div>\r\n            </Col>\r\n            <Col xs={24} md={9} className=\"colInfoDetailItem\">\r\n              <div className=\"itemDetailInfo\">\r\n                <span className=\"span-name-shop\">Món ngón Fpoly</span>\r\n                <span className=\"span-name-food-detail\">\r\n                  {\" \"}\r\n                  - {foodDetail.productName}{\" \"}\r\n                </span>\r\n              </div>\r\n              <h2 className=\"nameDetailItem\"> {foodDetail.productName}</h2>\r\n              <span className=\"span-id-food\">\r\n                Mã sản phẩm : {foodDetail.id}{\" \"}\r\n              </span>\r\n              <p>\r\n                <strong>{foodDetail.productName}</strong>{\" \"}\r\n                {foodDetail.description}\r\n              </p>\r\n\r\n              <>\r\n                {showTopping ? (\r\n                  <Row className=\"tableTopping\">\r\n                    <Col span={24}>\r\n                      <Table\r\n                      rowSelection={{\r\n                        type: 'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                        columns={columns}\r\n                        dataSource={foodDetail.toppingList}\r\n                        pagination={false}\r\n                        scroll={{ y: 200 }}\r\n                      z\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            </Col>\r\n            <Col xs={24} md={7} className=\"colCartDetailItem\">\r\n              <div className=\"itemDetailCartQuantity\">\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Row type=\"flex\" className=\"rowCartChangeQuantity\">\r\n                    <Col span={12} style={{ textAlign: \"left\" }}>\r\n                      <span className=\"span-id-food\">Số lượng</span>\r\n                    </Col>\r\n                    <Col span={12} style={{ textAlign: \"end\" }}>\r\n                      <span className=\"spanShowQuantity\">\r\n                        <Input\r\n                          className=\"inputShowQuantity\"\r\n                          inputMode=\"numeric\"\r\n                          defaultValue={quantity}\r\n                          pattern=\"[0-9]*\"\r\n                          type=\"number\"\r\n                          min={1}\r\n                          max={99}\r\n                          // value={quantity}\r\n                          onChange={onHandleChange}\r\n                        />\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"ant-row rowCartChangeQuantity\">\r\n                    {topping.length !== 0 && (\r\n                      <>\r\n                      \r\n                          <Col span={12}>\r\n                            <span className=\"spanPriceDetailItem\">\r\n                              Order thêm\r\n                            </span>\r\n                          </Col>\r\n                          <Col\r\n                            span={12}\r\n                            style={{ textAlign: \"end\", paddingRight: \"10px\" }}\r\n                          >\r\n                            {\" \"}\r\n                            <List\r\n                            style={{textAlign:'center'}}\r\n                              size=\"small\"\r\n                              bordered\r\n                              dataSource={topping}\r\n                              renderItem={(item) => (\r\n                                <List.Item>{item.topping.name} </List.Item>\r\n                              )}\r\n                            />\r\n                          </Col>\r\n                      \r\n                      </>\r\n                    )}\r\n                  </Row>\r\n                  <div style={{ margin: \"20px 0\" }}>\r\n                    <Row>\r\n                      <Col span={12}>\r\n                        <span className=\"spanPriceDetailItem\"> Giá:</span>\r\n                      </Col>\r\n                      <Col\r\n                        span={12}\r\n                        style={{ textAlign: \"end\", paddingRight: \"10px\" }}\r\n                      >\r\n                        <span className=\"spanPriceDetailItem\">\r\n                          {foodDetail.price} VNĐ\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row className=\"cart__button\">\r\n                    <span\r\n                      className=\"btn__label\"\r\n                      onClick={() => onAddToCart(foodDetail, quantity, topping)}\r\n                    >\r\n                      Đặt món\r\n                    </span>\r\n                  </Row>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Row style={{ marginLeft: \"25px\" }}>\r\n                <Col flex={4}>\r\n                  <h4 style={{ fontSize: \"36px\" }}>Gợi ý món ăn</h4>\r\n                </Col>\r\n                <Col flex={1} style={{ textAlign: \"right\" }}>\r\n                  {\" \"}\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ margin: 0 }}>\r\n                {product.map((food, index) => (\r\n                  <ProductItem\r\n                    product={food}\r\n                    key={index}\r\n                    onAddToCart={onAddToCart}\r\n                  />\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Cart visible={visible} onClose={onClose} />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cartData,\r\n    topping: state.toppingData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddToCart: (product, quantity, topping) => {\r\n      dispatch(addToCart(product, quantity, topping));\r\n    },\r\n    AddToTopping: (topping) => {\r\n      dispatch(addToping(topping));\r\n    },\r\n    DeleteToTopping: (topping) => {\r\n      dispatch(removeToCart(topping));\r\n    },\r\n    DeleteAllTopping: (topping) => {\r\n      dispatch(deleteAllCart(topping));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodDetail);\r\n",["305","306"],"E:\\Code\\DATN\\font-end\\src\\redux\\saga\\foodSaga.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\ProductCategory\\index.js",[],["307","308"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\index.js",["309","310","311","312","313"],"import { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Image,\r\n  notification,\r\n  Row,\r\n  Spin,\r\n} from \"antd\";\r\nimport confirm from \"antd/lib/modal/confirm\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addToCart, removeToCart } from \"../../../../redux/Action/cartAction\";\r\nimport * as foodAction from \"../../../../redux/Action/index\";\r\nimport Cart from \"../Cart\";\r\nimport CategoryHome from \"./CategoryHome\";\r\nimport \"./index.css\";\r\nimport ProductItemHome from \"./ProductItemHome\";\r\n\r\n\r\n\r\nconst Home = ({\r\n  foodAct,\r\n  litsFoot,\r\n  listGroup,\r\n  AddToCart,\r\n  cart,\r\n  onDeletePrToCart,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [categoryHome,setCategoryHome]=useState([]);\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://website-fpoly-food.herokuapp.com/menu`,\r\n      {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          Accept: \"*/*\",\r\n          Authorization: `Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkdWN0aGllbjE5MDUyMDAwQGdtYWlsLmNvbSIsImlhdCI6MTYwNjY0MzYxNCwiZXhwIjoxNjA3NTA3NjE0fQ.XJMMZAhZ9OrtN3eRTnAPj018TZXANwCASmdLfniF7rAjumeGJ2w0ObyIjQ7EhTstJTm4_OuLOAzT4dDnx3S1PQ`\r\n\r\n        }),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCategoryHome(response.body.content);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const onAddToCart = (product, quantity,topping) => {\r\n    confirm({\r\n      title: \"Bạn muốn thêm sản phẩm vào giỏ hàng?\",\r\n\r\n      content: `Sản phẩm :${product.productName} x ${quantity}`,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        AddToCart(product, quantity,topping);\r\n        notification[\"success\"]({\r\n          message: \"\",\r\n          duration: 2,\r\n          description: \"Thêm sản phẩm thành công\",\r\n        });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n  //showTotalCart\r\n  const showQuantity = (cart) => {\r\n    var quantity = 0;\r\n    if (cart.length > 0) {\r\n      for (var i = 0; i < cart.length; i++) {\r\n        quantity += cart[i].quantity;\r\n      }\r\n      return quantity;\r\n    }\r\n  };\r\n\r\n  if (categoryHome.length === 0) {\r\n    return (\r\n      <Spin tip=\"Loading...\">\r\n        <Alert\r\n          message=\"Thông báo\"\r\n          description=\"Đang tải dữ liệu vui lòng chờ.\"\r\n          type=\"info\"\r\n        />\r\n      </Spin>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <>\r\n          <Row>\r\n            <Badge count={showQuantity(cart)} id=\"myBtn\" overflowCount={10}>\r\n              <Button\r\n                shape=\"circle\"\r\n                style={{ background: \"none\", border: \"none\" }}\r\n                onClick={showDrawer}\r\n              >\r\n                {\" \"}\r\n                <ShoppingCartOutlined\r\n                  style={{ fontSize: \"30px\", color: \"#fff\", margin: 0 }}\r\n                />\r\n              </Button>\r\n            </Badge>\r\n\r\n            <div className=\"carousel-home\" style={{ margin: \"0 auto\" }}>\r\n              <img\r\n                disabled\r\n                style={{ height:'350px',width:'100%'}}\r\n                src=\"https://rawcdn.githack.com/0967517236/imag-datn/0fc6d18e91b5f33324b6a1824756dece21d71b8e/img-carousel-home.JPG\"\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <div >\r\n            {categoryHome.map((item,index)=>(\r\n            <CategoryHome newProduct={item} onAddToCart={onAddToCart}/>\r\n\r\n            ))\r\n            }\r\n          \r\n        <div className=\"site-layout-background-main-home\">\r\n            <section  className=\"section-courses\" id=\"section-courses\">\r\n                <div className=\"u-center-text u-margin-bottom-big\">\r\n                  <h2 className=\"heading-secondary\">\r\n                    Thời gian quý báu của bạn\r\n                  </h2>\r\n                </div>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <div className=\"card\">\r\n                      <div className=\"card__side card__side--front\">\r\n                        <div className=\"card__picture card__picture--1\">\r\n                          &nbsp;\r\n                          {/*- KÍ TỰ RỖNG TRONG HTML */}\r\n                        </div>\r\n                        <div className=\"card__details\">\r\n                          <span>Ưu đãi cho bạn</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card__side card__side--back card__side--back-1\">\r\n                        <div className=\"card__cta\">\r\n                          <div className=\"card__price-box\">\r\n                            <p className=\"card__price-only\">\r\n                              Khuyến mãi hằng ngày và nhiều món ngon chờ bạn.\r\n                            </p>\r\n                            {/* <p className=\"card__price-value\">$16</p> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <div className=\"card\">\r\n                      <div className=\"card__side card__side--front\">\r\n                        <div className=\"card__picture card__picture--2\">\r\n                          &nbsp;\r\n                        </div>\r\n\r\n                        <div className=\"card__details\">\r\n                          <span>Đảm bảo với bạn</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card__side card__side--back card__side--back-2\">\r\n                        <div className=\"card__cta\">\r\n                          <div className=\"card__price-box\">\r\n                            <p className=\"card__price-only\">\r\n                              Không tính phí dịch vụ\r\n                            </p>\r\n                            <p className=\"card__price-only\">\r\n                              Chất lượng dich vụ tuyệt vời\r\n                            </p>\r\n                            <p className=\"card__price-only\">\r\n                              Giá đảm bảo: thanh toán với giá bằng với giá tại\r\n                              nhà hàng\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <div className=\"card\">\r\n                      <div className=\"card__side card__side--front\">\r\n                        <div className=\"card__picture card__picture--3\">\r\n                          &nbsp;\r\n                        </div>\r\n                       \r\n                        <div className=\"card__details\">\r\n                        <span>Lợi ích của bạn</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card__side card__side--back card__side--back-3\">\r\n                        <div className=\"card__cta\">\r\n                          <div className=\"card__price-box\">\r\n                          <p className=\"card__price-only\">\r\n                              Giao hàng tận nơi\r\n                            </p>\r\n                            <p className=\"card__price-only\">\r\n                            Thanh toán online hoặc bằng tiền mặt\r\n                            </p>\r\n                            <p className=\"card__price-only\">\r\n                            Đặt món mọi lúc mọi nơi tại trang web\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </section>\r\n              </div>\r\n              {visible === true ? (\r\n                <Cart visible={visible} onClose={onClose} />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n          </div>\r\n        </>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    litsFoot: state.foodData.lists,\r\n    listGroup: state.groupData.lists,\r\n    cart: state.cartData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    foodAct: bindActionCreators(foodAction, dispatch),\r\n\r\n    AddToCart: (product, quantity,topping) => {\r\n      dispatch(addToCart(product, quantity,topping));\r\n    },\r\n    onDeletePrToCart: (product) => {\r\n      dispatch(removeToCart(product));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\CategoryHome.jsx",["314","315"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Food\\index.js",["316"],"E:\\Code\\DATN\\font-end\\src\\redux\\store\\configStore.js",[],"E:\\Code\\DATN\\font-end\\src\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\cartAction.js",[],["317","318"],"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\cartReducer.js",[],["319","320"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Home\\ProductItemHome.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\toppinngAction.jsx",[],"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\toppingReducer.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\ProductItem.jsx",["321"],"E:\\Code\\DATN\\font-end\\src\\App.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\foodReducer.js",[],["322","323"],"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\invoiceReducer.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\saga\\categorySaga.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\saga\\userSaga.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\saga\\invoiceSaga.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\layout\\Main.js",[],["324","325"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\User\\OAuth2\\OAuth2RedirectHandler.js",["326"],"import React, { Component } from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport { ACCESS_TOKEN } from '../../../../../constants';\r\n\r\nclass OAuth2RedirectHandler extends Component {\r\n    getUrlParameter(name) {\r\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n        var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n\r\n        var results = regex.exec(this.props.location.search);\r\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n    };\r\n\r\n    render() {        \r\n        const token = this.getUrlParameter('token');\r\n        const error = this.getUrlParameter('error');\r\n\r\n        if(token) {\r\n            localStorage.setItem(ACCESS_TOKEN, token);\r\n            localStorage.setItem(\"authenticated\", true);\r\n\r\n            return <Redirect to={{\r\n                pathname: \"/\",\r\n                state: { from: this.props.location }\r\n            }}/>; \r\n        } else {\r\n            return <Redirect to={{\r\n                pathname: \"/login\",\r\n                state: { \r\n                    from: this.props.location,\r\n                    error: error \r\n                }\r\n            }}/>; \r\n        }\r\n    }\r\n}\r\n\r\nexport default OAuth2RedirectHandler;","E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\group-food.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\ModalAdd\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\ModalEdit\\editFood.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\layout\\MainAdmin.js",["327"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\cartItem.jsx",["328","329"],"import { DeleteTwoTone, EditTwoTone } from '@ant-design/icons'\r\nimport { Button, Col, Image, Row } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport EditCart from './editCart'\r\nimport {EyeOutlined}  from '@ant-design/icons'\r\n\r\nconst CartItem = ({item,onHandleRemoveCart,onUpdatePrToCart}) => {\r\n    const [isModal, setIsModal] = useState(false)\r\n    const [itemEdit,setItemEdit] = useState({})\r\n  \r\n   \r\n      const topping = item.topping.map(toping=>(toping.topping.name))\r\n    \r\n    const handleOk = (e) => {\r\n      setIsModal(false);\r\n    };\r\n    const handleCancel = (e) => {\r\n      setIsModal(false);\r\n    };\r\n    const showModal = (item) => {\r\n      setIsModal(true);\r\n      setItemEdit(item)\r\n    };\r\n    console.log(item)\r\n    return (\r\n        <div>\r\n            <Row>\r\n                  <Col span={6} style={{ padding: \"5px\" }}>\r\n                    <Image src={item.product.image} />\r\n                  </Col>\r\n                  <Col span={18}>\r\n                    <Row style={{ margin: 0 }}>\r\n                      <Col span={12}>\r\n                        <Row style={{margin:0}}>\r\n                        <span style={{ fontSize: 16, fontWeight: 500 }}>\r\n                         {item.quantity}x  {item.product.productName}\r\n                        </span>{\" \"}\r\n                        </Row>\r\n                       \r\n                        <Row style={{ margin: 0 }}>\r\n                              <span className='span-topping'>\r\n                              {topping}\r\n                            </span>\r\n\r\n                        </Row>\r\n                        <Row style={{ margin: 0 }}>\r\n                        <span className='span-detail-item'  onClick={()=>showModal(item)}>\r\n                       \r\n                        </span>\r\n                        </Row>\r\n                      \r\n                       \r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Row style={{ margin: 0 }}>\r\n                          <span style={{ fontSize: 16, fontWeight: 500 }}>\r\n                            {item.product.price} đ/{item.product.unit}\r\n                          </span>\r\n                        </Row>\r\n                        <Row style={{ margin: 0 }}>\r\n                          <Button\r\n                            onClick={()=>showModal(item)}\r\n                            style={{ background: \"none\", border: \"none\" }}\r\n                          >\r\n                            {\" \"}\r\n                            <EyeOutlined />\r\n                          </Button>\r\n                          <Button\r\n                            onClick={() => onHandleRemoveCart(item.product,item.topping)}\r\n                            style={{ background: \"none\", border: \"none\" }}\r\n                          >\r\n                            {\" \"}\r\n                            <DeleteTwoTone />\r\n                          </Button>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  {isModal?<EditCart visible={isModal} handleCancel={handleCancel} onUpdatePrToCart={onUpdatePrToCart} onHandleRemoveCart={onHandleRemoveCart} item={itemEdit}/>:''}\r\n                \r\n                </Row>\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\routers\\index.js",["330","331"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\ProductSearch\\index.jsx",["332","333","334","335"],"import { ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { Col, Row, Spin } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  addToCart,\r\n  removeToCart,\r\n  updateToCart,\r\n} from \"../../../../redux/Action/cartAction\";\r\nimport CartItem from \"../Cart/cartItem\";\r\nimport ProductItem from \"../Product/ProductItem\";\r\nimport \"./index.css\";\r\n\r\nconst ProductSearch = ({\r\n  litsFoot,\r\n  listGroup,\r\n  cart,\r\n  AddToCart,\r\n  onDeletePrToCart,\r\n  onUpdatePrToCart,\r\n}) => {\r\n  let { key } = useParams();\r\n  const [current, setCurrent] = useState(1);\r\n  const [currentCateFood, setCurrentCateFood] = useState([]);\r\n  const [nameCate, setNameCate] = useState(\"\");\r\n  const page = current - 1;\r\n  const [keySearch, setKeySearch] = useState(key);\r\n\r\n  //   const onChange = (page) => {\r\n  //     setCurrent(page);\r\n  //   };\r\n  const onChangeSearch = (e) => {\r\n    setKeySearch(e.target.value);\r\n  };\r\n  console.log(keySearch);\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://website-fpoly-food.herokuapp.com/product/?productName=${keySearch}&categoryId=&size=&page=`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.error) {\r\n          throw res.error;\r\n        }\r\n\r\n        setCurrentCateFood(res.body.content);\r\n\r\n        return res;\r\n      })\r\n      .catch((error) => {});\r\n  }, [keySearch, page]);\r\n  const onHandleRemoveCart = (product,topping) => {\r\n    onDeletePrToCart(product, topping);\r\n  };\r\n  const showTotal = (ct) => {\r\n    var total = 0;\r\n    if (ct.length > 0) {\r\n      for (var i = 0; i < ct.length; i++) {\r\n        total += ct[i].product.price * ct[i].quantity;\r\n      }\r\n      return total;\r\n    }\r\n  };\r\n  const onSearch = (value) => setKeySearch(value);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"container-main-product\">\r\n        <Col span={22} style={{ margin: \"0 auto\" }}>\r\n          <Row className=\"content-food\">\r\n            <h2>Kết quả tìm kiếm \"{keySearch}\"</h2>\r\n          </Row>\r\n          <Row style={{ background: \"#eeeeee\" }}>\r\n            <Col span={8}>\r\n              <Row style={{ margin: \"20px\" }}></Row>\r\n            </Col>\r\n            <Col span={8} offset={8}>\r\n              <Row style={{ margin: \"20px\" }}>\r\n                <Col span={16} offset={8}>\r\n                  <Col>\r\n                    <Search\r\n                      placeholder=\"Tìm món ăn\"\r\n                      enterButton\r\n                      onSearch={onSearch}\r\n                    />\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            {currentCateFood.length === 0 ? (\r\n              <Col span={18} className=\"menu-food-col\">\r\n                <h3>Không có kết quả tìm kiếm</h3>\r\n              </Col>\r\n            ) : (\r\n              <Col span={18} className=\"menu-food-col\">\r\n                <Row className=\"row-food-all\" style={{ margin: \"0 0 20px 0\" }}>\r\n                  <Col span={24}>\r\n                    <Row style={{ margin: \"0\" }}>\r\n                      {currentCateFood.length === 0 && <Spin />}\r\n\r\n                      {currentCateFood.map((item, index) => (\r\n                        <ProductItem\r\n                          product={item}\r\n                          key={index}\r\n                          page={current}\r\n                          onAddToCart={AddToCart}\r\n                        />\r\n                      ))}\r\n                    </Row>\r\n                    {/* <Row>\r\n                          <Pagination\r\n                            current={current}\r\n                            onChange={onChange}\r\n                            total={currentCateFood.length}\r\n                            pageSize={8}\r\n                          />\r\n                        </Row> */}\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            )}\r\n            <Col span={6}>\r\n              <Row className=\"row-show-cart\" style={{ margin: 0 }}>\r\n                <Col span={24}>\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"-44px\",\r\n                      right: \"0px\",\r\n                      backgroundColor: \"rgb(235, 113, 0)\",\r\n                      borderRadius: \"50px\",\r\n                      width: \"80px\",\r\n                      height: \"80px\",\r\n                      border: \"12px solid white\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <ShoppingCartOutlined />\r\n                  </div>\r\n                  <Row className=\"cart__header\">\r\n                    <span>Số món</span>\r\n                  </Row>\r\n                  <Row>\r\n                    {cart.map((item, index) => (\r\n                      <CartItem\r\n                        item={item}\r\n                        key={index}\r\n                        onHandleRemoveCart={onHandleRemoveCart}\r\n                        onUpdatePrToCart={onUpdatePrToCart}\r\n                      />\r\n                    ))}\r\n                  </Row>\r\n                  <Row className=\"row-price-cart\">\r\n                    <span className=\"cart__price-total\">Tổng giá</span>\r\n\r\n                    <span className=\"cart__price-total\" span={16}>\r\n                        \r\n                      {showTotal(cart)} đ\r\n                    </span>\r\n                  </Row>\r\n                  <Row className=\"cart__button\">\r\n                  <Link to=\"/checkout\" className=\"btn__label\">\r\n                  Tiến hành đặt hàng\r\n                </Link>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cartData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    AddToCart: (product, quantity, topping) => {\r\n      dispatch(addToCart(product, quantity, topping));\r\n    },\r\n    onDeletePrToCart: (product, topping) => {\r\n      dispatch(removeToCart(product, topping));\r\n    },\r\n    onUpdatePrToCart: (product, quantity, topping) => {\r\n      dispatch(updateToCart(product, quantity, topping));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Search\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\FirstStep.js",["336"],"import { Button, Col, Form, Input, message, Row, Select } from \"antd\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as userAction from \"../../../../redux/Action/userAction\";\r\n\r\nconst FirstStep = ({ user, userAct, current, setCurrent, steps }) => {\r\n  const dataLocal = localStorage.getItem(\"OrderDetail\");\r\n  const orderDetail = dataLocal !== null ? JSON.parse(dataLocal) : null;\r\n  \r\n    \r\n  \r\n  // orderDetail.user = user\r\n  const [form] = Form.useForm();\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 22 },\r\n  };\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    orderDetail.user = values.user;\r\n    localStorage.setItem(\"OrderDetail\", JSON.stringify(orderDetail));\r\n    next();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const fetchEmployee = useCallback(() => {\r\n    const { getData } = userAct;\r\n   \r\n    getData();\r\n  }, [userAct]);\r\n  useEffect(() => {\r\n    fetchEmployee();\r\n    \r\n  }, [fetchEmployee]);\r\n\r\n  form.setFieldsValue({ user: user});\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"row-checkout-profile-user\" style={{ margin: 0 }}>\r\n        <Form\r\n          form={form}\r\n          style={{ width: \"100%\", display: \"contents\" }}\r\n          {...layout}\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Col xs={24} md={12} className=\"customer-info\">\r\n            <h1>Thông tin khách hàng</h1>\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Họ và tên\"\r\n              name={[\"user\", \"name\"]}\r\n              \r\n            >\r\n              <Input className=\"input-checkout\" span={24}  disabled/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Email\"\r\n              name={[\"user\", \"email\"]}\r\n           \r\n            >\r\n              <Input className=\"input-checkout\"  disabled/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Số điện thoại\"\r\n              name={[\"user\", \"phone\"]}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Vui lòng nhập số điện thoại của bạn!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input className=\"input-checkout\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={12} className=\"customerAddress\">\r\n            <h1>Địa chỉ giao hàng</h1>\r\n            <Row>\r\n            <Col span={12}>\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Tòa nhà\"\r\n              name={[\"user\", \"building\"]}\r\n            >\r\n              <Select>\r\n                <Select.Option value=\"Tòa F\">Tòa F</Select.Option>\r\n                <Select.Option value=\"Tòa P\">Tòa P</Select.Option>\r\n                <Select.Option value=\"Tòa T\">Tòa T</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Tầng\"\r\n              name={[\"user\", \"floor\"]}\r\n            >\r\n              <Select>\r\n                <Select.Option value=\"Tầng 1\">Tầng 1</Select.Option>\r\n                <Select.Option value=\"Tàng 2\">Tầng 2</Select.Option>\r\n                <Select.Option value=\"Tầng 3\">Tầng 3</Select.Option>\r\n                <Select.Option value=\"Tầng 4\">Tầng 4</Select.Option>\r\n              </Select>\r\n            </Form.Item>\r\n            </Col>\r\n            </Row>\r\n\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Phòng\"\r\n              name={[\"user\", \"class\"]}\r\n            \r\n            >\r\n              <Select>\r\n                <Select.Option value=\"1\"> 1</Select.Option>\r\n                <Select.Option value=\"2\">2</Select.Option>\r\n                <Select.Option value=\"3\">3</Select.Option>\r\n              \r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Địa chỉ cụ thể\"\r\n              name={[\"user\", \"deliveryAddress\"]}\r\n            >\r\n              <Input className=\"input-checkout\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              className=\"item-form\"\r\n              style={{ margin: 0 }}\r\n              label=\"Ghi chú\"\r\n              name={[\"user\", \"description\"]}\r\n            >\r\n              <Input className=\"input-checkout\" />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <div className=\"steps-action\">\r\n            {current < steps.length - 1 && (\r\n              <div className='btnNext'>\r\n                <Button type=\"primary\" htmlType=\"submit\"  >\r\n                Tiếp\r\n              </Button>\r\n              </div>\r\n            )}\r\n            {current === steps.length - 1 && (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => message.success(\"Processing complete!\")}\r\n              >\r\n                Thanh toán\r\n              </Button>\r\n            )}\r\n            {current > 0 && (\r\n              <div className='btnPre'>\r\n                <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\r\n                Trước\r\n              </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Form>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nFirstStep.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.userData.lists,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userAct: bindActionCreators(userAction, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FirstStep);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\SecondStep.js",["337"],"import { CreditCardFilled, DeleteTwoTone, DollarCircleFilled, EditTwoTone } from \"@ant-design/icons\";\r\nimport { Button, Col, message, notification, Row, Tabs } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeToCart, updateToCart } from \"../../../../redux/Action/cartAction\";\r\nimport EditCart from \"../Cart/editCart\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst SecondStep = ({ cart, current, setCurrent, steps, onDeletePrToCart,onUpdatePrToCart }) => {\r\n  const [isModal, setIsModal] = useState(false)\r\n  const [itemEdit,setItemEdit] = useState({})\r\n\r\n  const dataLocal = localStorage.getItem(\"OrderDetail\");\r\n  const orderDetail = dataLocal !== null ? JSON.parse(dataLocal) : null;\r\n  const cartRequests = cart.map((item,index)=>{return {\r\n    productId : item.product.id,\r\n    quantity: item.quantity,\r\n    listToppingId:item.topping.map(item=>item.topping.id)\r\n  }})\r\n\r\n  const onHandleRemoveCart = (product,topping) => {\r\n    onDeletePrToCart(product,topping);\r\n  };\r\n  \r\n  \r\n  const handleCancel = (e) => {\r\n    setIsModal(false);\r\n  };\r\n  const showModal = (item) => {\r\n    setIsModal(true);\r\n    setItemEdit(item)\r\n  };\r\n  ///showTotalPrice\r\n  const showTotal = (ct) => {\r\n    var total = 0; \r\n    if (ct.length > 0) {\r\n      for (var i = 0; i < ct.length; i++) {\r\n        total += ct[i].product.price * ct[i].quantity;\r\n      }\r\n      return total;\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n   if(cart.length>0){\r\n    orderDetail.amountTotal = showTotal(cart);\r\n    orderDetail.cartRequests= cartRequests\r\n    orderDetail.paymentMethods = 'Thanh toán tiền mặt';\r\n    setCurrent(current + 1);\r\n    localStorage.setItem(\"OrderDetail\", JSON.stringify(orderDetail));\r\n   }\r\n   else{\r\n    notification['warning']({\r\n      message: 'Cảnh báo',\r\n      description:\r\n        'Giỏ hàng rỗng, hãy thêm giỏ hàng để tiếp tục.',\r\n    });\r\n   }\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"row-checkout-profile-user\" style={{ margin: 0 }}>\r\n        <Col xs={24} lg={17}>\r\n          <div className=\"col-checkout-cart\">\r\n            <Row type=\"flex\" className=\"checkoutCartHeader\">\r\n              <Col md={4} className=\"itemHeader\"></Col>\r\n              <Col md={5} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\">Tên món ăn</span>\r\n              </Col>\r\n              <Col md={4} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\">Giá</span>\r\n              </Col>\r\n              <Col md={4} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\">Số lượng</span>\r\n              </Col>\r\n              <Col md={4} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\">Thành tiền</span>\r\n              </Col>\r\n              <Col md={3} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\"></span>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"bodyCheckoutCart\">\r\n              {cart.map((item, index) => (\r\n                <Row className=\"overItem\">\r\n                  <Col md={4} className=\"itemBody\">\r\n                    <img src={item.product.image} style={{ width: \"96px\" }} />\r\n                  </Col>\r\n                  <Col md={5} className=\"itemBody\">\r\n                    <span className=\"spanItemCartBody\">\r\n                      {item.product.productName}\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className=\"itemBody\">\r\n                    <span className=\"spanItemCartBody\">\r\n                      {\" \"}\r\n                      {item.product.price} đ{\" \"}\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className=\"itemBody\">\r\n                    <span className=\"spanItemCartBody\">{item.quantity}</span>\r\n                  </Col>\r\n                  <Col md={4} className=\"itemBody\">\r\n                    <span className=\"spanItemCartBody\">\r\n                      {item.product.price * item.quantity} đ\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={3} className=\"itemBody\">\r\n                    <span className=\"spanItemCartBody\">\r\n                      <Button style={{ background: \"none\", border: \"none\" }}  onClick={()=>showModal(item)}>\r\n                        {\" \"}\r\n                        <EditTwoTone />\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => onDeletePrToCart(item.product,item.topping)}\r\n                        style={{ background: \"none\", border: \"none\" }}\r\n                      >\r\n                        {\" \"}\r\n                        <DeleteTwoTone />\r\n                      </Button>\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n        <Col xs={24} md={7} style={{ background: \"#fff\" }}>\r\n          <div className=\"col-method-checkout\">\r\n            <Row type=\"flex\" className=\"checkoutCartHeader\">\r\n              <Col span={24} className=\"itemHeader\">\r\n                <span className=\"nameItemHeaderCheckout\">\r\n                  Phương thức thanh toán\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"\">\r\n              <Row>\r\n                <Col md={24} className=\"itemBody\">\r\n                  <Tabs type=\"card\">\r\n                    <TabPane\r\n                      tab={\r\n                        <span>\r\n                          <CreditCardFilled />\r\n                          Chuyển khoản\r\n                        </span>\r\n                      }\r\n                      key=\"1\"\r\n                    >\r\n                      Đang phát triển\r\n                    </TabPane>\r\n                    <TabPane tab={\r\n                        <span>\r\n                          <DollarCircleFilled />\r\n                          Tiền mặt\r\n                        </span>\r\n                      } key=\"2\">\r\n                        {current < steps.length - 1 && (\r\n          <Button type=\"primary\" onClick={() => next()}>\r\n            Xác nhận thanh toán\r\n          </Button>\r\n        )}\r\n                    </TabPane>\r\n                    \r\n                  </Tabs>\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n          </div>\r\n\r\n          <Row></Row>\r\n        </Col>\r\n\r\n        <Row className=\"subTotalCheckout\">\r\n          <Col xs={24} lg={12} style={{ textAlign: \"left\" }}>\r\n            {\" \"}\r\n            <span style={{ fontSize: \"18px\", fontWeight: \"500\" }}>\r\n              Tổng chi phí\r\n            </span>\r\n          </Col>\r\n          <Col xs={24} lg={12} style={{ textAlign: \"right\" }}>\r\n            <span style={{ fontSize: \"18px\", fontWeight: \"500\" }}>\r\n              {\" \"}\r\n              {showTotal(cart)} VNĐ\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n      <div className=\"steps-action\">\r\n        \r\n        {current === steps.length - 1 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => message.success(\"Processing complete!\")}\r\n          >\r\n            Thanh toán\r\n          </Button>\r\n        )}\r\n        {current > 0 && (\r\n         <div className='btnPre'>\r\n         <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\r\n         Trước\r\n       </Button>\r\n       </div>\r\n        )}\r\n      </div>\r\n      {isModal?<EditCart visible={isModal} handleCancel={handleCancel} onUpdatePrToCart={onUpdatePrToCart} onHandleRemoveCart={onHandleRemoveCart} item={itemEdit}/>:''}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cartData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeletePrToCart: (product,topping) => {\r\n      dispatch(removeToCart(product,topping));\r\n    },\r\n    onUpdatePrToCart :(product,quantity,topping)=>{\r\n      dispatch(updateToCart(product,quantity,topping))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondStep);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\FourStep.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Login\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Footer\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\components\\Loading\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\redux\\reducers\\userReducer.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\categoryAction.js",[],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\userAction.js",[],"E:\\Code\\DATN\\font-end\\src\\routers\\PrivateRouter.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Product\\ProducCategory.jsx",["338"],"E:\\Code\\DATN\\font-end\\src\\components\\Main\\Footer\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Category\\index.jsx",["339"],"import { DeleteFilled, EditFilled } from \"@ant-design/icons\";\r\nimport { Button, Col, Row, Table } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport * as categoryAction from \"../../../../redux/Action/categoryAction\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst Category = ({ categoryAct, listGroup }) => {\r\n\r\n  const fetchCategory = useCallback(() => {\r\n    const { getDataCategory } = categoryAct;\r\n    getDataCategory();\r\n\r\n  }, [categoryAct]);\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, [fetchCategory]);\r\n\r\n  const handleRemoveCategory=(id) =>{\r\n    const {deleteData} = categoryAct;\r\n    deleteData(id);\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"Tên thể loại\",\r\n      dataIndex: \"categoryName\",\r\n      render: (text) => <span>{text}</span>,\r\n      \r\n    },\r\n    {\r\n      title: \"Ảnh\",\r\n      dataIndex: \"image\",\r\n      render: (text) => <img style={{ height: \"70px\", width: \"80px\" }} src={text}/>,\r\n    },\r\n     \r\n \r\n    {\r\n      title: \"\",\r\n      dataIndex: \"\",\r\n      with: 3,\r\n    \r\n      key: \"x\",\r\n      render: (text, record) => (\r\n        <>\r\n          {\" \"}\r\n          <>\r\n            <Button onClick={()=>handleRemoveCategory(record.id)}>\r\n              <DeleteFilled />\r\n            </Button>\r\n            <Button>\r\n              <EditFilled />\r\n            </Button>\r\n          </>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"title-content-admin\">\r\n        <h4 className=\"title-h4\">Quản lý danh mục</h4>\r\n      </Row>\r\n      <Row className=\"site-layout-content-admin\">\r\n        <Col xs={24} lg={24}>\r\n          <Row className=\"top-content-food\">\r\n            <Col xs={24} lg={12} className=\"col-add-food\">\r\n              <Button size=\"large\"  type='primary'>Thêm danh mục</Button>\r\n            </Col>\r\n            <Col span={6}></Col>\r\n            <Col xs={24} lg={5} className=\"col-search-food\">\r\n              <Search\r\n                placeholder=\"Tìm danh mục\"\r\n                size=\"large\"\r\n                enterButton\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} lg={24}>\r\n              <Table\r\n                className=\"table-food-admin\"\r\n                columns={columns}\r\n                scroll={{ x: '100vh' }}\r\n                expandable={{\r\n                  expandedRowRender: (record) => (\r\n                    <p style={{ margin: 0 }}>{record.name}</p>\r\n                  ),\r\n                }}\r\n                dataSource={listGroup}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nCategory.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listGroup: state.groupData.lists,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    categoryAct: bindActionCreators(categoryAction, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\FoodDetail\\cartTopping.jsx",["340","341","342","343","344"],"import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Checkbox } from 'antd'\r\n\r\nconst CartTopping = ({handleAddTopping,record,onChange,checked}) => {\r\n        const [checkedd,setChecked]= useState(checked)\r\n\r\n    // const onChange = (e, topping) => {\r\n    //     console.log(e.target.checked,topping)\r\n    //     if (e.target.checked) {\r\n    //       const price = foodDetail.price + topping.price;\r\n    //       handleAddTopping(topping);\r\n    //       setFoodDetail({ ...foodDetail, price });\r\n    //     }\r\n    //     if (e.target.checked === false) {\r\n    //       DeleteToTopping(topping);\r\n    //       const price = foodDetail.price - topping.price;\r\n    \r\n    //       setFoodDetail({ ...foodDetail, price });\r\n    //     }\r\n    //   };\r\n\r\n    return (\r\n        <div>\r\n                   {/* <CartTopping checked={checked} onChange={onChange}/> */}\r\n              {/* <Checkbox onChange={(e) => onChange(e, record)} checked={checked} defaultChecked={false}></Checkbox> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nCartTopping.propTypes = {\r\n\r\n}\r\n\r\nexport default CartTopping\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceDetail.jsx",["345","346"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Profile\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\constants\\index.js",[],"E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Slider\\index.js",["347"],"import {\r\n  DesktopOutlined,\r\n\r\n  FileOutlined, PieChartOutlined\r\n} from '@ant-design/icons';\r\nimport { Col, Layout, Menu, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\n  \r\n \r\n\r\nconst Slider = () => {\r\n    const {   Sider } = Layout;\r\n    const { SubMenu } = Menu;\r\n    const [collapsed,setCollapsed] = useState(false)\r\n   \r\n    \r\n    const  toggle = () => {\r\n       setCollapsed(!collapsed)\r\n      };\r\n    \r\n    return (\r\n        <>\r\n              <Sider  className='slider-admin' collapsible collapsed={collapsed} onCollapse={toggle} >\r\n          <Row className=\"top-sider\" ><Col className='logo' span={24}>Logo</Col>  \r\n        \r\n         \r\n            </Row> \r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                <Link to='/admin/'>\r\n                Dashboard\r\n                </Link>\r\n                \r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n                <Link to='/admin/food'>\r\n                Sản phẩm\r\n                </Link>\r\n              \r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<FileOutlined />}>\r\n            <Link to='/admin/category' >\r\n            Thể loại\r\n                </Link>\r\n              \r\n            </Menu.Item> \r\n            <Menu.Item key=\"4\" icon={<FileOutlined />}>\r\n            <Link to='/admin/invoice'>\r\n            Đơn hàng\r\n                </Link>\r\n              \r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Slider\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceAll.jsx",["348"],"import { Button, Table } from \"antd\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as invoiceAction from \"../../../../redux/Action/invoiceAction\";\r\nimport \"./index.css\";\r\nimport InvoiceDetail from \"./invoiceDetail\";\r\n\r\nconst InvoiceAll = ({ invoiceAct, litsInvoice,change }) => {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [id, setId] = useState();\r\n  const [data, setData] = useState();\r\n \r\n  const handleOk = (e) => {\r\n    setIsModal(false);\r\n  };\r\n  console.log(change)\r\n\r\n  const handleCancel = (e) => {\r\n    setIsModal(false);\r\n  };\r\n  const fetchEmployee = useCallback(() => {\r\n    const { getData } = invoiceAct;\r\n    getData(change);\r\n  }, [change]);\r\n  useEffect(() => {\r\n    fetchEmployee();\r\n  }, [fetchEmployee,isModal]);\r\n  console.log(litsInvoice);\r\n  const handleChangeActive=(id)=>{\r\n    fetch(`https://website-fpoly-food.herokuapp.com/invoice/processing/${id}`)\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      if (res.error) {\r\n        throw res.error;\r\n      }\r\n\r\n      setData(res.body);\r\n\r\n      return res;\r\n    })\r\n    .catch((error) => {});\r\n    handleCancel()\r\n  }\r\n  \r\n  const showDetail = (id) => {\r\n    setIsModal(true);\r\n    fetch(`https://website-fpoly-food.herokuapp.com/invoice/details/${id}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.error) {\r\n          throw res.error;\r\n        }\r\n\r\n        setData(res.body);\r\n\r\n        return res;\r\n      })\r\n      .catch((error) => {});\r\n    setId(id);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Tên khách hàng\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return <span style={{ fontWeight: \"bold\" }}>{record.user.name}</span>;\r\n        } else {\r\n          return <span>{record.user.name}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return (\r\n            <span style={{ fontWeight: \"bold\" }}>{record.deliveryAddress}</span>\r\n          );\r\n        } else {\r\n          return <span>{record.deliveryAddress}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return (\r\n            <span style={{ fontWeight: \"bold\" }}>{record.user.email}</span>\r\n          );\r\n        } else {\r\n          return <span>{record.user.email}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Ngày đặt hàng\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return <span style={{ fontWeight: \"bold\" }}>{record.createdAt}</span>;\r\n        } else {\r\n          return <span>{record.createdAt}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return <span style={{ fontWeight: \"bold\" }}>{record.status}</span>;\r\n        } else {\r\n          return <span>{record.status}</span>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Hình thức thanh toán\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => {\r\n        if (record.status === \"Chưa_sử_lý\") {\r\n          return (\r\n            <span style={{ fontWeight: \"bold\" }}>{record.paymentMethods}</span>\r\n          );\r\n        } else {\r\n          return <span>{record.paymentMethods}</span>;\r\n        }\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      with: \"15%\",\r\n      key: \"x\",\r\n      render: (text, record) => (\r\n        <>\r\n          {\" \"}\r\n          <>\r\n            <Button onClick={() => showDetail(record.id)}> Chi tiết</Button>\r\n            {/* <Button  ><EditFilled /></Button> */}\r\n          </>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"table-food-admin\"\r\n        columns={columns}\r\n        scroll={{ x: '100vh' }}\r\n        expandable={{\r\n          expandedRowRender: (record) => (\r\n            <p style={{ margin: 0 }}>{record.name}</p>\r\n          ),\r\n        }}\r\n        dataSource={litsInvoice}\r\n      />\r\n\r\n      {isModal === true ? (\r\n        <InvoiceDetail\r\n          id={id}\r\n          handleChangeActive={handleChangeActive}\r\n          visible={isModal}\r\n          data={data}\r\n          handleOk={handleOk}\r\n          handleCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    litsInvoice: state.invoiceData.lists,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    invoiceAct: bindActionCreators(invoiceAction, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceAll);\r\n","E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceSucces.jsx",["349"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\invoiceActive.jsx",["350","351"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Profile\\ProfileInvoice.js",["352"],"E:\\Code\\DATN\\font-end\\src\\redux\\Action\\invoiceAction.js",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Checkout\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Main\\Cart\\CartCheckout.jsx",[],"E:\\Code\\DATN\\font-end\\src\\components\\Admin\\Header\\index.js",["353"],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Invoice\\InvoiceShip.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Dasboard\\index.jsx",[],"E:\\Code\\DATN\\font-end\\src\\pages\\view\\Admin\\Dasboard\\chartData.js",[],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":21},{"ruleId":"358","severity":1,"message":"362","line":17,"column":13,"nodeType":"360","messageId":"361","endLine":17,"endColumn":17},{"ruleId":"363","severity":1,"message":"364","line":62,"column":19,"nodeType":"365","endLine":62,"endColumn":78},{"ruleId":"363","severity":1,"message":"364","line":102,"column":19,"nodeType":"365","endLine":105,"endColumn":15},{"ruleId":"354","replacedBy":"366"},{"ruleId":"356","replacedBy":"367"},{"ruleId":"358","severity":1,"message":"368","line":2,"column":10,"nodeType":"360","messageId":"361","endLine":2,"endColumn":16},{"ruleId":"358","severity":1,"message":"369","line":18,"column":10,"nodeType":"360","messageId":"361","endLine":18,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":58,"column":9,"nodeType":"365","endLine":58,"endColumn":38},{"ruleId":"370","severity":1,"message":"371","line":114,"column":21,"nodeType":"365","endLine":117,"endColumn":22},{"ruleId":"358","severity":1,"message":"372","line":25,"column":8,"nodeType":"360","messageId":"361","endLine":25,"endColumn":19},{"ruleId":"358","severity":1,"message":"373","line":43,"column":8,"nodeType":"360","messageId":"361","endLine":43,"endColumn":15},{"ruleId":"374","severity":1,"message":"375","line":55,"column":6,"nodeType":"376","endLine":55,"endColumn":10,"suggestions":"377"},{"ruleId":"358","severity":1,"message":"378","line":59,"column":9,"nodeType":"360","messageId":"361","endLine":59,"endColumn":24},{"ruleId":"358","severity":1,"message":"362","line":127,"column":13,"nodeType":"360","messageId":"361","endLine":127,"endColumn":17},{"ruleId":"358","severity":1,"message":"379","line":177,"column":9,"nodeType":"360","messageId":"361","endLine":177,"endColumn":21},{"ruleId":"363","severity":1,"message":"364","line":187,"column":9,"nodeType":"365","endLine":190,"endColumn":11},{"ruleId":"354","replacedBy":"380"},{"ruleId":"356","replacedBy":"381"},{"ruleId":"354","replacedBy":"382"},{"ruleId":"356","replacedBy":"383"},{"ruleId":"358","severity":1,"message":"384","line":7,"column":3,"nodeType":"360","messageId":"361","endLine":7,"endColumn":8},{"ruleId":"358","severity":1,"message":"385","line":13,"column":17,"nodeType":"360","messageId":"361","endLine":13,"endColumn":28},{"ruleId":"358","severity":1,"message":"386","line":15,"column":10,"nodeType":"360","messageId":"361","endLine":15,"endColumn":14},{"ruleId":"358","severity":1,"message":"387","line":23,"column":8,"nodeType":"360","messageId":"361","endLine":23,"endColumn":23},{"ruleId":"363","severity":1,"message":"364","line":123,"column":15,"nodeType":"365","endLine":127,"endColumn":17},{"ruleId":"358","severity":1,"message":"388","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":17},{"ruleId":"374","severity":1,"message":"389","line":29,"column":6,"nodeType":"376","endLine":29,"endColumn":8,"suggestions":"390"},{"ruleId":"363","severity":1,"message":"364","line":82,"column":9,"nodeType":"365","endLine":82,"endColumn":69},{"ruleId":"354","replacedBy":"391"},{"ruleId":"356","replacedBy":"392"},{"ruleId":"354","replacedBy":"393"},{"ruleId":"356","replacedBy":"394"},{"ruleId":"358","severity":1,"message":"395","line":5,"column":8,"nodeType":"360","messageId":"361","endLine":5,"endColumn":15},{"ruleId":"354","replacedBy":"396"},{"ruleId":"356","replacedBy":"397"},{"ruleId":"354","replacedBy":"398"},{"ruleId":"356","replacedBy":"399"},{"ruleId":"400","severity":1,"message":"401","line":8,"column":31,"nodeType":"402","messageId":"403","endLine":8,"endColumn":32,"suggestions":"404"},{"ruleId":"358","severity":1,"message":"405","line":2,"column":18,"nodeType":"360","messageId":"361","endLine":2,"endColumn":28},{"ruleId":"358","severity":1,"message":"406","line":1,"column":25,"nodeType":"360","messageId":"361","endLine":1,"endColumn":36},{"ruleId":"358","severity":1,"message":"407","line":14,"column":11,"nodeType":"360","messageId":"361","endLine":14,"endColumn":19},{"ruleId":"358","severity":1,"message":"408","line":1,"column":8,"nodeType":"360","messageId":"361","endLine":1,"endColumn":14},{"ruleId":"358","severity":1,"message":"409","line":5,"column":3,"nodeType":"360","messageId":"361","endLine":5,"endColumn":13},{"ruleId":"358","severity":1,"message":"410","line":25,"column":19,"nodeType":"360","messageId":"361","endLine":25,"endColumn":29},{"ruleId":"358","severity":1,"message":"411","line":27,"column":10,"nodeType":"360","messageId":"361","endLine":27,"endColumn":18},{"ruleId":"358","severity":1,"message":"412","line":27,"column":20,"nodeType":"360","messageId":"361","endLine":27,"endColumn":31},{"ruleId":"358","severity":1,"message":"413","line":34,"column":9,"nodeType":"360","messageId":"361","endLine":34,"endColumn":23},{"ruleId":"358","severity":1,"message":"414","line":2,"column":10,"nodeType":"360","messageId":"361","endLine":2,"endColumn":16},{"ruleId":"363","severity":1,"message":"364","line":92,"column":21,"nodeType":"365","endLine":92,"endColumn":79},{"ruleId":"358","severity":1,"message":"415","line":5,"column":16,"nodeType":"360","messageId":"361","endLine":5,"endColumn":25},{"ruleId":"363","severity":1,"message":"364","line":35,"column":25,"nodeType":"365","endLine":35,"endColumn":84},{"ruleId":"358","severity":1,"message":"388","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":17},{"ruleId":"358","severity":1,"message":"368","line":3,"column":10,"nodeType":"360","messageId":"361","endLine":3,"endColumn":16},{"ruleId":"358","severity":1,"message":"416","line":3,"column":18,"nodeType":"360","messageId":"361","endLine":3,"endColumn":26},{"ruleId":"358","severity":1,"message":"417","line":6,"column":16,"nodeType":"360","messageId":"361","endLine":6,"endColumn":24},{"ruleId":"358","severity":1,"message":"418","line":6,"column":25,"nodeType":"360","messageId":"361","endLine":6,"endColumn":35},{"ruleId":"358","severity":1,"message":"384","line":1,"column":23,"nodeType":"360","messageId":"361","endLine":1,"endColumn":28},{"ruleId":"363","severity":1,"message":"364","line":30,"column":7,"nodeType":"365","endLine":30,"endColumn":71},{"ruleId":"358","severity":1,"message":"419","line":16,"column":13,"nodeType":"360","messageId":"361","endLine":16,"endColumn":20},{"ruleId":"374","severity":1,"message":"420","line":25,"column":6,"nodeType":"376","endLine":25,"endColumn":14,"suggestions":"421"},{"ruleId":"374","severity":1,"message":"420","line":22,"column":12,"nodeType":"376","endLine":22,"endColumn":20,"suggestions":"422"},{"ruleId":"358","severity":1,"message":"423","line":13,"column":10,"nodeType":"360","messageId":"361","endLine":13,"endColumn":14},{"ruleId":"358","severity":1,"message":"424","line":17,"column":9,"nodeType":"360","messageId":"361","endLine":17,"endColumn":27},{"ruleId":"374","severity":1,"message":"425","line":22,"column":6,"nodeType":"376","endLine":22,"endColumn":12,"suggestions":"426"},{"ruleId":"358","severity":1,"message":"427","line":2,"column":50,"nodeType":"360","messageId":"361","endLine":2,"endColumn":54},"no-native-reassign",["428"],"no-negated-in-lhs",["429"],"no-unused-vars","'CollapsePanel' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["428"],["429"],"'Button' is defined but never used.","'authenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CartTopping' is defined but never used.","'checked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DeleteAllTopping'. Either include it or remove the dependency array. If 'DeleteAllTopping' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["430"],"'findProductCart' is assigned a value but never used.","'checkTopping' is assigned a value but never used.",["428"],["429"],["428"],["429"],"'Image' is defined but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'ProductItemHome' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'newProduct.id'. Either include it or remove the dependency array.",["431"],["428"],["429"],["428"],["429"],"'Loading' is defined but never used.",["428"],["429"],["428"],["429"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["432","433"],"'Breadcrumb' is defined but never used.","'EditTwoTone' is defined but never used.","'handleOk' is assigned a value but never used.","'Search' is defined but never used.","'HashRouter' is defined but never used.","'setCurrent' is assigned a value but never used.","'nameCate' is assigned a value but never used.","'setNameCate' is assigned a value but never used.","'onChangeSearch' is assigned a value but never used.","'Option' is defined but never used.","'useParams' is defined but never used.","'Checkbox' is defined but never used.","'checkedd' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'invoiceAct'. Either include it or remove the dependency array.",["434"],["435"],"'data' is assigned a value but never used.","'handleChangeActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'invoiceAct'. Either include it or remove the dependency array.",["436"],"'Menu' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"messageId":"441","fix":"442","desc":"443"},{"messageId":"444","fix":"445","desc":"446"},{"desc":"447","fix":"448"},{"desc":"447","fix":"449"},{"desc":"450","fix":"451"},"Update the dependencies array to be: [DeleteAllTopping, id]",{"range":"452","text":"453"},"Update the dependencies array to be: [newProduct.id]",{"range":"454","text":"455"},"removeEscape",{"range":"456","text":"457"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"458","text":"459"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [change, invoiceAct]",{"range":"460","text":"461"},{"range":"462","text":"461"},"Update the dependencies array to be: [invoiceAct, user]",{"range":"463","text":"464"},[1448,1452],"[DeleteAllTopping, id]",[1015,1017],"[newProduct.id]",[258,259],"",[258,258],"\\",[780,788],"[change, invoiceAct]",[778,786],[751,757],"[invoiceAct, user]"]